@import './functions';

@mixin btn-color($color) {
	background-color: $color;
}

@mixin btn-shape($value: 4rem, $rectangle: null, $circle: null, $square: null) {
	& .btn {
		@if $rectangle {
			padding: ($value/2) $value;
		}

		@if $square {
			padding: $value;
		}

		@if $circle {
			border-radius: 50%;
		}
	}
}

@mixin input-range-focus-sudo($color: null) {
	&::-webkit-slider-runnable-track {
		background: $color;
	}

	&::-ms-fill-lower {
		background: $color;
	}

	&::-ms-fill-upper {
		background: $color;
	}
}

@mixin vendor-track-defaults() {
	width: 100%;
	height: 8.4px;
	cursor: pointer;
	@content;
}

@mixin slider-thumb() {
	&::-webkit-slider-thumb {
		@content;
		-webkit-appearance: none;
		margin-top: -14px;
	}

	&::-moz-range-thumb {
		@content;
	}

	&::-ms-thumb {
		@content;
	}
}

@mixin ms-fill-lower-upper($lower-color: null, $upper-color: null) {
	&::-ms-fill-upper {
		background: $upper-color;
		@content;
	}

	&::-ms-fill-lower {
		background: $lower-color;
		@content;
	}
}

@function linearRGB($color) {
	@if $color <=0.04045 {
		@return $color / 12.92;
	} @else if $color>=0.04045 {
		@return pow((($color + 0.055)/1.055), 2.4);
	}
}

@function luminance($color) {
	$r: linearRGB(red($color) / 255);
	$g: linearRGB(green($color) / 255);
	$b: linearRGB(blue($color) / 255);

	@return ($r * 0.2126 + $g * 0.7152 + $b * 0.0722);
}

$white-luminance: luminance(white);

@mixin btn-base($bg, $darken: 20%) {
	/* Theme Color: #{$bg} */
	background-color: darken($bg, $darken);
	border-color: darken(darken($bg, $darken), 20%);

	/* luminance(#{$bg}): #{luminance($bg)}
   * luminance(white): #{luminance(white)}
   */
	@if abs(luminance($bg) - $white_luminance) >0.7 {
		// @if lightness($bg) < 70 {
		color: white;
	} @else {
		color: $color-grey;
	}

	&:hover {
		background-color: adjust-color(adjust-color($bg, $saturation: 20%), $lightness: 10%);
	}
}

@mixin theme($color, $rotate: 120deg, $darkenpct: 20%) {
	$primary-color: $color;
	$secondary-color: adjust-color($color, $hue: -$rotate);
	$other-color: adjust-color($color, $hue: $rotate);
	$other2-color: adjust-color($color, $hue: 180deg);

	& .btn {
		&.btn-primary {
			@include btn-base($primary-color, 0);
		}

		&.btn-secondary {
			@include btn-base($secondary-color);
		}

		&.btn-other {
			@include btn-base($other-color);
		}

		&.btn-other2 {
			@include btn-base($other2-color);
		}
	}
}
